package io.github.chris2011.netbeans.minifierbeans.xml.ui.options;

import javax.swing.JPanel;
import java.util.Arrays;
import java.util.Collection;
import java.util.Collections;
import org.netbeans.spi.options.OptionsPanelController;
import org.openide.util.NbBundle;

@OptionsPanelController.Keywords(keywords = {"xml", "#XmlOptionsPanel.Keyword1", "#XmlOptionsPanel.Keyword2"},
    location = "Html5", tabTitle = "#CTL_OptionsPanel.title")
@NbBundle.Messages({
    "CTL_OptionsPanel.title=Minification",
    "XmlOptionsPanel.Keyword1=Minify XML",
    "XmlOptionsPanel.Keyword2=Minify XML on save"
})
public final class XmlOptionsPanel extends JPanel {
    private String[] keywords;

    public XmlOptionsPanel() {
        initComponents();

        headerLabelXml.setVisible(false);
        headerScrollPaneXml.setVisible(false);
        txtHeaderEditorPaneXml.setVisible(false);

//        BaseDocument t = (BaseDocument) txtHeaderEditorPaneXml.getDocument();
//
//        EditorUI editorUI = new EditorUI(t, true, true);
//        editorUI.setLineNumberEnabled(true);
//        editorUI.updateLineNumberWidth(120);
    }

    @Override
    public void addNotify() {
        super.addNotify();
    }

    @Override
    public void removeNotify() {
        super.removeNotify();
    }

    public Collection<String> getKeywords() {
        if (keywords == null) {
            keywords = new String[]{
                "Xml",
                Bundle.XmlOptionsPanel_Keyword1().toUpperCase(),
                Bundle.XmlOptionsPanel_Keyword2().toUpperCase()
            };
        }

        return Collections.unmodifiableList(Arrays.asList(keywords));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        xmlMinifierLabel = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        chbGenerateNewXmlFile = new javax.swing.JCheckBox();
        txtXmlPreExtension = new javax.swing.JTextField();
        chbMinifyOnSave = new javax.swing.JCheckBox();
        extLabel = new javax.swing.JLabel();
        xmlMinifierFlagsLabel = new javax.swing.JLabel();
        txtXmlMinifierFlags = new javax.swing.JTextField();
        xmlMinifierArgumentsHintsLabel = new javax.swing.JLabel();
        headerLabelXml = new javax.swing.JLabel();
        headerScrollPaneXml = new javax.swing.JScrollPane();
        txtHeaderEditorPaneXml = new javax.swing.JEditorPane();

        org.openide.awt.Mnemonics.setLocalizedText(xmlMinifierLabel, org.openide.util.NbBundle.getMessage(XmlOptionsPanel.class, "XmlOptionsPanel.xmlMinifierLabel.text")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(xmlMinifierLabel)
                .addGap(0, 409, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(xmlMinifierLabel)
                .addContainerGap(10, Short.MAX_VALUE))
        );

        jPanel2.setPreferredSize(new java.awt.Dimension(762, 86));

        chbGenerateNewXmlFile.setBackground(new java.awt.Color(255, 255, 255));
        org.openide.awt.Mnemonics.setLocalizedText(chbGenerateNewXmlFile, org.openide.util.NbBundle.getMessage(XmlOptionsPanel.class, "XmlOptionsPanel.chbGenerateNewXmlFile.text")); // NOI18N
        chbGenerateNewXmlFile.setContentAreaFilled(false);

        txtXmlPreExtension.setText(org.openide.util.NbBundle.getMessage(XmlOptionsPanel.class, "XmlOptionsPanel.txtXmlPreExtension.text")); // NOI18N

        chbMinifyOnSave.setBackground(new java.awt.Color(255, 255, 255));
        org.openide.awt.Mnemonics.setLocalizedText(chbMinifyOnSave, org.openide.util.NbBundle.getMessage(XmlOptionsPanel.class, "XmlOptionsPanel.chbMinifyOnSave.text")); // NOI18N
        chbMinifyOnSave.setContentAreaFilled(false);

        extLabel.setForeground(extLabel.getForeground().darker());
        org.openide.awt.Mnemonics.setLocalizedText(extLabel, org.openide.util.NbBundle.getMessage(XmlOptionsPanel.class, "XmlOptionsPanel.extLabel.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(xmlMinifierFlagsLabel, org.openide.util.NbBundle.getMessage(XmlOptionsPanel.class, "XmlOptionsPanel.xmlMinifierFlagsLabel.text")); // NOI18N

        txtXmlMinifierFlags.setText(org.openide.util.NbBundle.getMessage(XmlOptionsPanel.class, "XmlOptionsPanel.txtXmlMinifierFlags.text")); // NOI18N

        xmlMinifierArgumentsHintsLabel.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(xmlMinifierArgumentsHintsLabel, org.openide.util.NbBundle.getMessage(XmlOptionsPanel.class, "XmlOptionsPanel.xmlMinifierArgumentsHintsLabel.text")); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(chbGenerateNewXmlFile)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtXmlPreExtension, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(extLabel))
            .addComponent(chbMinifyOnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(xmlMinifierFlagsLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(xmlMinifierArgumentsHintsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtXmlMinifierFlags, javax.swing.GroupLayout.PREFERRED_SIZE, 707, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(xmlMinifierFlagsLabel)
                    .addComponent(txtXmlMinifierFlags, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(xmlMinifierArgumentsHintsLabel)
                .addGap(18, 18, 18)
                .addComponent(chbMinifyOnSave)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chbGenerateNewXmlFile)
                    .addComponent(extLabel)
                    .addComponent(txtXmlPreExtension, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        org.openide.awt.Mnemonics.setLocalizedText(headerLabelXml, org.openide.util.NbBundle.getMessage(XmlOptionsPanel.class, "XmlOptionsPanel.headerLabelXml.text")); // NOI18N

        txtHeaderEditorPaneXml.setContentType("text/xml"); // NOI18N
        headerScrollPaneXml.setViewportView(txtHeaderEditorPaneXml);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(headerScrollPaneXml, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(headerLabelXml)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 794, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(headerLabelXml)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(headerScrollPaneXml, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel2.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(XmlOptionsPanel.class, "XmlOptionsPanel.jPanel2.AccessibleContext.accessibleName")); // NOI18N
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JCheckBox chbGenerateNewXmlFile;
    public javax.swing.JCheckBox chbMinifyOnSave;
    private javax.swing.JLabel extLabel;
    private javax.swing.JLabel headerLabelXml;
    private javax.swing.JScrollPane headerScrollPaneXml;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    protected javax.swing.JEditorPane txtHeaderEditorPaneXml;
    public javax.swing.JTextField txtXmlMinifierFlags;
    public javax.swing.JTextField txtXmlPreExtension;
    private javax.swing.JLabel xmlMinifierArgumentsHintsLabel;
    private javax.swing.JLabel xmlMinifierFlagsLabel;
    private javax.swing.JLabel xmlMinifierLabel;
    // End of variables declaration//GEN-END:variables
}
