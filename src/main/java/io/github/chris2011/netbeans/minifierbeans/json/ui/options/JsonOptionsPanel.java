package io.github.chris2011.netbeans.minifierbeans.json.ui.options;

import javax.swing.JPanel;
import java.util.Arrays;
import java.util.Collection;
import java.util.Collections;
import org.netbeans.spi.options.OptionsPanelController;
import org.openide.util.NbBundle;

@OptionsPanelController.Keywords(keywords={"json", "#JsonOptionsPanel.Keyword1", "#JsonOptionsPanel.Keyword2"},
        location="Html5", tabTitle="#CTL_OptionsPanel.title")
@NbBundle.Messages({
    "CTL_OptionsPanel.title=Minification",
    "JsonOptionsPanel.Keyword1=Minify JSON",
    "JsonOptionsPanel.Keyword2=Minify JSON on save"
})
public final class JsonOptionsPanel extends JPanel {
    private String[] keywords;

    public JsonOptionsPanel() {
        initComponents();

        headerLabelJson.setVisible(false);
        headerScrollPaneJson.setVisible(false);
        txtHeaderEditorPaneJson.setVisible(false);
    }
    
    @Override
    public void addNotify() {
        super.addNotify();
    }

    @Override
    public void removeNotify() {
        super.removeNotify();
    }

    public Collection<String> getKeywords () {
        if (keywords == null) {
            keywords = new String[] {
                "JSON",
                Bundle.JsonOptionsPanel_Keyword1().toUpperCase(),
                Bundle.JsonOptionsPanel_Keyword2().toUpperCase()
            };
        }

        return Collections.unmodifiableList(Arrays.asList(keywords));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        chbGenerateNewJsonFile = new javax.swing.JCheckBox();
        txtJsonPreExtension = new javax.swing.JTextField();
        chbMinifyOnSave = new javax.swing.JCheckBox();
        extLabel = new javax.swing.JLabel();
        headerScrollPaneJson = new javax.swing.JScrollPane();
        txtHeaderEditorPaneJson = new javax.swing.JEditorPane();
        headerLabelJson = new javax.swing.JLabel();

        setName(""); // NOI18N

        jPanel2.setPreferredSize(new java.awt.Dimension(762, 86));

        chbGenerateNewJsonFile.setBackground(new java.awt.Color(255, 255, 255));
        org.openide.awt.Mnemonics.setLocalizedText(chbGenerateNewJsonFile, org.openide.util.NbBundle.getMessage(JsonOptionsPanel.class, "JsonOptionsPanel.chbGenerateNewJsonFile.text")); // NOI18N
        chbGenerateNewJsonFile.setContentAreaFilled(false);

        txtJsonPreExtension.setText(org.openide.util.NbBundle.getMessage(JsonOptionsPanel.class, "JsonOptionsPanel.txtJsonPreExtension.text")); // NOI18N

        chbMinifyOnSave.setBackground(new java.awt.Color(255, 255, 255));
        org.openide.awt.Mnemonics.setLocalizedText(chbMinifyOnSave, org.openide.util.NbBundle.getMessage(JsonOptionsPanel.class, "JsonOptionsPanel.chbMinifyOnSave.text")); // NOI18N
        chbMinifyOnSave.setContentAreaFilled(false);

        extLabel.setForeground(extLabel.getForeground().darker());
        org.openide.awt.Mnemonics.setLocalizedText(extLabel, org.openide.util.NbBundle.getMessage(JsonOptionsPanel.class, "JsonOptionsPanel.extLabel.text")); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chbMinifyOnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(chbGenerateNewJsonFile)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtJsonPreExtension, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(extLabel)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(chbMinifyOnSave)
                .addGap(6, 6, 6)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(extLabel)
                        .addComponent(txtJsonPreExtension, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(chbGenerateNewJsonFile))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        txtHeaderEditorPaneJson.setContentType("text/x-json"); // NOI18N
        headerScrollPaneJson.setViewportView(txtHeaderEditorPaneJson);

        org.openide.awt.Mnemonics.setLocalizedText(headerLabelJson, org.openide.util.NbBundle.getMessage(JsonOptionsPanel.class, "JsonOptionsPanel.headerLabelJson.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(headerLabelJson)
                            .addComponent(headerScrollPaneJson, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 391, Short.MAX_VALUE)
                        .addGap(6, 6, 6))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(headerLabelJson)
                .addGap(6, 6, 6)
                .addComponent(headerScrollPaneJson, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JCheckBox chbGenerateNewJsonFile;
    public javax.swing.JCheckBox chbMinifyOnSave;
    private javax.swing.JLabel extLabel;
    private javax.swing.JLabel headerLabelJson;
    private javax.swing.JScrollPane headerScrollPaneJson;
    private javax.swing.JPanel jPanel2;
    protected javax.swing.JEditorPane txtHeaderEditorPaneJson;
    public javax.swing.JTextField txtJsonPreExtension;
    // End of variables declaration//GEN-END:variables
}
